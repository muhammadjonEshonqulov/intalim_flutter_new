import 'package:easy_localization/easy_localization.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:intalim/app/router.dart';import 'package:intalim/db/cache.dart';import 'package:intalim/features/home/page/home_student.dart';import 'package:intalim/features/lessons/page/lessons.dart';import 'package:intalim/features/savedLessons/page/saved_lessons_page.dart';import 'package:intalim/features/test/page/test_page.dart';import '../../../common/services/utils/utils.dart';class MainScreen extends StatefulWidget {  const MainScreen({super.key});  @override  State<MainScreen> createState() => _MainScreenState();}class _MainScreenState extends State<MainScreen> {  @override  void initState() {    _onGetData();    super.initState();  }  Future<void> _onGetData() async {    // setState(() async {    fullName = await cache.getString(cache.fullname) ?? "home".tr();    var organization2 = await cache.getString(cache.organization_user_uz) ?? "organization".tr();    setState(() {      tittle = fullName;      organization = organization2;    });    // });  }  PageController _pageController = PageController();  int _currentIndex = 0;  String tittle = "home".tr();  String fullName = "";  String organization = "";  bool _imageVisible = true;  bool _searchVisible = true;  bool _organizationVisible = true;  @override  Widget build(BuildContext context) {    SystemChrome.setSystemUIOverlayStyle(      SystemUiOverlayStyle(        statusBarColor: Utils.colorPrimary,      ),    );    return Scaffold(      appBar: PreferredSize(        preferredSize: const Size.fromHeight(70.0),        child: AppBar(          backgroundColor: Colors.white,          elevation: 0,          flexibleSpace: SafeArea(            child: Container(              height: 70,              child: Card(                elevation: 2,                child: Padding(                  padding: const EdgeInsets.all(8.0),                  child: Row(                    mainAxisAlignment: MainAxisAlignment.spaceBetween,                    children: [                      Visibility(                          visible: _imageVisible,                          child: const SizedBox(                            height: 50,                            width: 50,                            child: CircleAvatar(                              radius: 25,                              backgroundColor: Colors.white,                              backgroundImage: AssetImage('assets/images/person_default.png'),                            ),                          )),                      SizedBox(width: 8),                      Expanded(                        child: Column(                          crossAxisAlignment: CrossAxisAlignment.start,                          mainAxisAlignment: MainAxisAlignment.center,                          children: [                            Text(                              tittle,                              style: TextStyle(                                fontFamily: 'Montserrat',                                fontWeight: FontWeight.w600,                                color: Colors.black,                                fontSize: 16,                              ),                            ),                            SizedBox(height: 2),                            Visibility(                                visible: _organizationVisible,                                child: Text(                                  organization,                                  style: TextStyle(                                    fontFamily: 'Montserrat',                                    fontWeight: FontWeight.w400,                                    color: Colors.grey,                                    fontSize: 12,                                  ),                                )),                          ],                        ),                      ),                      SizedBox(width: 8),                      InkWell(                        onTap: () {                        },                        child: Visibility(visible: _searchVisible, child: SizedBox(width: 20, height: 20, child: Image.asset("assets/images/search.png"))),                      ),                      SizedBox(width: 10),                      InkWell(                        onTap: () {                          router.push(Routes.profile);                        },                        child: Container(width: 20, height: 20, child: Image.asset("assets/images/menu.png")),                      ),                    ],                  ),                ),              ),            ),          ),        ),      ),      body: PageView.builder(        controller: _pageController,        onPageChanged: (index) {          setState(() {            _currentIndex = index;            switch (_currentIndex) {              case 0:                {                  _imageVisible = true;                  _organizationVisible = true;                  _searchVisible = false;                  tittle = fullName;                  break;                }              case 1:                {                  _imageVisible = false;                  _organizationVisible = false;                  _searchVisible = true;                  tittle = 'lesson'.tr();                  break;                }              case 2:                {                  _imageVisible = false;                  _searchVisible = true;                  _organizationVisible = false;                  tittle = 'saved'.tr();                  break;                }              case 3:                {                  _searchVisible = false;                  _imageVisible = false;                  _organizationVisible = false;                  tittle = 'test'.tr();                  break;                }            }            // tittle = _currentIndex == 0            //     ? fullName            //     : _currentIndex == 1            //         ? 'lesson'.tr()            //         : _currentIndex == 2            //             ? 'saved'.tr()            //             : 'test'.tr();          });        },        itemCount: 4,        itemBuilder: (context, index) {          return buildPage(index);        },      ),      bottomNavigationBar: BottomNavigationBar(        currentIndex: _currentIndex,        onTap: (index) {          setState(() {            _currentIndex = index;            _pageController.animateToPage(index, duration: const Duration(milliseconds: 100), curve: Curves.fastOutSlowIn);            // switch (_currentIndex) {            //   case 0:            //     {            //       _imageVisible = true;            //       _organizatinVisible = true;            //       tittle = fullName;            //       break;            //     }            //   case 1:            //     {            //       _imageVisible = false;            //       _organizatinVisible = false;            //       tittle = 'lesson'.tr();            //       break;            //     }            //   case 2:            //     {            //       _imageVisible = false;            //       _organizatinVisible = false;            //       tittle = 'saved'.tr();            //       break;            //     }            //   case 3:            //     {            //       _imageVisible = false;            //       _organizatinVisible = false;            //       tittle = 'test'.tr();            //       break;            //     }            // }          });        },        selectedItemColor: Utils.colorPrimary,        // Set selected label color        unselectedItemColor: Utils.defTextColor,        selectedIconTheme: IconThemeData(color: Utils.colorPrimary),        showUnselectedLabels: true,        items: [          BottomNavigationBarItem(            icon: Image.asset("assets/images/home.png", width: 24, height: 24, color: _currentIndex == 0 ? Utils.colorPrimary : Utils.defTextColor),            label: 'home'.tr(),          ),          BottomNavigationBarItem(            icon: Image.asset("assets/images/lessons_main.png", width: 24, height: 24, color: _currentIndex == 1 ? Utils.colorPrimary : Utils.defTextColor),            label: 'lesson'.tr(),          ),          BottomNavigationBarItem(            icon: Image.asset("assets/images/saved_main.png", width: 24, height: 24, color: _currentIndex == 2 ? Utils.colorPrimary : Utils.defTextColor),            label: 'saved'.tr(),          ),          BottomNavigationBarItem(            icon: Image.asset(_currentIndex == 3 ? "assets/images/tests_main_selected.png" : "assets/images/tests_main.png", width: 24, height: 24),            label: 'test'.tr(),          ),        ],      ),    );  }  Widget buildPage(int index) {    switch (index) {      case 0:        return HomeStudent();      case 1:        return const LessonsPageWithRepo();      case 2:        return const SavedLessonsPageWithRepo();      case 3:        return const TestsPageWithRepo();      default:        return Container();    }  }}