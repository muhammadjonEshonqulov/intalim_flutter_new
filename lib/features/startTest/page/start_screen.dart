import 'package:easy_localization/easy_localization.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import '../../../common/widgets/appbar.dart';import '../block/start_bloc.dart';import '../repository/start_repository.dart';class StartTestPageWithRepo extends StatelessWidget {  const StartTestPageWithRepo({required this.testId, required this.testName,required this.typeId,  super.key});  final int testId;  final int typeId;  final String testName;  @override  Widget build(BuildContext context) {    return BlocProvider(      create: (context) => StartTestBloc(context.read<StartTestRepository>()),      child: StartTestScreen(testId: testId, testName: testName,typeId: typeId,),    );  }}class StartTestScreen extends StatefulWidget {  const StartTestScreen({required this.testId, required this.testName,required this.typeId,super.key});  final int testId;  final int typeId;  final String testName;  @override  State<StartTestScreen> createState() => _StartTestScreenState();}class _StartTestScreenState extends State<StartTestScreen> {  final TextEditingController _startController = TextEditingController();  TextEditingController _passwordController = TextEditingController();  bool _isObscure = true;  late StartTestBloc _startBloc;  @override  void initState() {    _startBloc = BlocProvider.of<StartTestBloc>(context);    super.initState();  }  @override  Widget build(BuildContext context) {    return SafeArea(      child:Scaffold(        appBar: PreferredSize(          preferredSize: Size.fromHeight(100.0),          child: CustomAppBar(titleName: widget.typeId == 0 ? "lesson_test".tr() : "template_test".tr() ),        ),        body: SingleChildScrollView(          child: Padding(            padding: const EdgeInsets.all(16.0),            child: Column(              crossAxisAlignment: CrossAxisAlignment.stretch,              children: [                Text(                  widget.testName,                  style: TextStyle(                    fontFamily: 'Montserrat',                    color: Colors.black,                    fontSize: 18.0,                    fontWeight: FontWeight.w600,                  ),                ),                SizedBox(height: 16.0),                Row(                  children: [                    Expanded(                      flex: 3,                      child: Column(                        crossAxisAlignment: CrossAxisAlignment.start,                        children: [                          Text(                            'count_questions'.tr(),                            style: TextStyle(                              fontFamily: 'Montserrat',                              color: Colors.grey,                              fontSize: 13.0,                              fontWeight: FontWeight.w500,                            ),                          ),                          Text(                            'times'.tr(),                            style: TextStyle(                              fontFamily: 'Montserrat',                              color: Colors.black,                              fontSize: 18.0,                              fontWeight: FontWeight.w600,                            ),                          ),                        ],                      ),                    ),                    Expanded(                      flex: 3,                      child: Padding(                        padding: const EdgeInsets.only(left: 16.0),                        child: Column(                          crossAxisAlignment: CrossAxisAlignment.start,                          children: [                            Text(                              'pass_result'.tr(),                              style: TextStyle(                                fontFamily: 'Montserrat',                                color: Colors.grey,                                fontSize: 13.0,                                fontWeight: FontWeight.w500,                              ),                            ),                            Row(                              children: [                                Text(                                  '18',                                  style: TextStyle(                                    fontFamily: 'Montserrat',                                    color: Colors.black,                                    fontSize: 18.0,                                    fontWeight: FontWeight.w600,                                  ),                                ),                                Text(                                  ' / 20',                                  style: TextStyle(                                    fontFamily: 'Montserrat',                                    color: Colors.grey,                                    fontSize: 18.0,                                    fontWeight: FontWeight.w600,                                  ),                                ),                              ],                            ),                          ],                        ),                      ),                    ),                    Expanded(                      flex: 2,                      child: Align(                        alignment: Alignment.center,                        child: Stack(                            alignment: Alignment.center,                            children: [                              Container(                                  height: 48,                                  width: 48,                                  child: CircularProgressIndicator(                                value: 0.9,                                backgroundColor: Colors.grey,                                valueColor: AlwaysStoppedAnimation<Color>(Colors.green),                                strokeWidth: 4.0,                              )),                              Center(                                child: Text(                                  '90%',                                  style: TextStyle(                                    fontFamily: 'Montserrat',                                    fontWeight: FontWeight.w500,                                    color: Colors.black,                                    fontSize: 14.0,                                  ),                                ),                              ),                            ],                          ),                      ),                    ),                  ],                ),                SizedBox(height: 16.0),                Row(                mainAxisAlignment: MainAxisAlignment.spaceBetween,                  children: [                    Text(                      'best_result'.tr(),                      style: TextStyle(                        fontFamily: 'Montserrat',                        fontWeight: FontWeight.w600,                        color: Colors.black,                        fontSize: 15.0,                      ),                    ),                    Text(                      '85% 19 20',                      style: TextStyle(                        fontFamily: 'Montserrat',                        fontWeight: FontWeight.w600,                        color: Colors.black,                        fontSize: 15.0,                      ),                    ),                  ],                ),                SizedBox(height: 16.0),                LinearProgressIndicator(                  value: 0.85, // Adjust the progress value                  backgroundColor: Colors.grey,                  valueColor: AlwaysStoppedAnimation<Color>(Colors.green),                ),                SizedBox(height: 16.0),                Row(                  children: [                    Image.asset('assets/images/clock_circle.png',                        width: 18.0,                        height: 18.0, color: Colors.grey,),                    SizedBox(width: 5.0),                    Expanded(                      child: Text(                        'given_time_for_solve_test'.tr(),                        style: TextStyle(                          fontFamily: 'Montserrat',                          fontWeight: FontWeight.w500,                          color: Colors.grey,                          fontSize: 13.0,                        ),                      ),                    ),                    Text(                      'be_finished'.tr(),                      style: TextStyle(                        fontFamily: 'Montserrat',                        fontWeight: FontWeight.w500,                        color: Colors.grey,                        fontSize: 13.0,                      ),                    ),                  ],                ),                SizedBox(height: 40.0),                GestureDetector(                  onTap: () {                    // Handle button click                  },                  child: Container(                    decoration: BoxDecoration(                      borderRadius: BorderRadius.circular(8.0),                      color: Colors.blue, // Change the color as needed                    ),                    padding: EdgeInsets.symmetric(vertical: 14.0),                    child: Text(                      'Start Test',                      textAlign: TextAlign.center,                      style: TextStyle(                        fontFamily: 'montserrat',                        color: Colors.white,                        fontSize: 14.0,                      ),                    ),                  ),                ),              ],            ),          ),        ),      )      // Scaffold(      //     appBar: PreferredSize(      //       preferredSize: Size.fromHeight(100.0),      //       child: CustomAppBar(titleName:widget.testName),      //     ),      //     backgroundColor: Colors.white,      //     body: BlocConsumer<StartTestBloc, NetworkResult>(listener: (context, state) {      //       if (state is Error) {      //         hideLoading();      //         snack(context, state.message.toString());      //       } else if (state is Success) {      //         hideLoading();      //         router.go(Routes.main);      //       } else if (state is Loading) {      //         showLoading(context);      //       } else {      //         hideLoading();      //         snack(context, state.message.toString());      //       }      //     }, builder: (context, state) {      //       return SingleChildScrollView(      //         child: Column(      //           crossAxisAlignment: CrossAxisAlignment.stretch,      //           children: [      //             Padding(      //               padding: const EdgeInsets.fromLTRB(16.0, 40.0, 16.0, 0),      //               child: Row(      //                 mainAxisAlignment: MainAxisAlignment.spaceBetween,      //                 children: [      //                   Column(      //                     crossAxisAlignment: CrossAxisAlignment.start,      //                     children: [      //                       Text(      //                         "make_registration".tr(),      //                         style: const TextStyle(      //                           fontFamily: 'Montserrat',      //                           fontWeight: FontWeight.w600,      //                           color: Colors.black,      //                           fontSize: 16.0,      //                         ),      //                       ),      //                       Image.asset(      //                         'assets/images/register_icon.png',      //                         width: 110.0,      //                         height: 20.0,      //                       ),      //                     ],      //                   ),      //                   Card(      //                     color: Utils.cardDefColor,      //                     shape: RoundedRectangleBorder(      //                       borderRadius: BorderRadius.circular(8.0),      //                     ),      //                     elevation: 0,      //                     child: Padding(      //                       padding: const EdgeInsets.all(8.0),      //                       child: Row(      //                         children: [      //                           Image.asset(      //                             'assets/images/ic_uz.png',      //                             width: 30.0,      //                             height: 20.0,      //                           ),      //                           Text(      //                             'uzbek_language'.tr(),      //                             style: TextStyle(      //                               fontFamily: 'Montserrat',      //                               fontWeight: FontWeight.w500,      //                               color: Colors.black,      //                               fontSize: 14.0,      //                             ),      //                           ),      //                         ],      //                       ),      //                     ),      //                   ),      //                 ],      //               ),      //             ),      //             Image.asset(      //               'assets/images/start_icon.png',      //               height: 250.0,      //               width: 260.0,      //               alignment: Alignment.center,      //             ),      //             SizedBox(      //               height: 20,      //             ),      //             Text(      //               "start_txt".tr(),      //               style: TextStyle(      //                 fontFamily: 'Montserrat',      //                 color: Colors.black,      //                 fontWeight: FontWeight.w500,      //                 fontSize: 20.0,      //               ),      //               textAlign: TextAlign.center,      //             ),      //             SizedBox(      //               height: 20,      //             ),      //             Padding(      //               padding: const EdgeInsets.only(left: 16.0),      //               child: Text(      //                 'user_name'.tr(),      //                 style: TextStyle(      //                   fontFamily: 'Montserrat',      //                   color: Colors.black,      //                   fontWeight: FontWeight.w600,      //                   fontSize: 16.0,      //                 ),      //               ),      //             ),      //             Padding(      //               padding: const EdgeInsets.all(10.0),      //               child: TextField(      //                 controller: _startController,      //                 // onChanged: (value) => startController.updateUsername(value), controller: _startController,      //                 decoration: InputDecoration(      //                   filled: true,      //                   fillColor: Utils.cardDefColor,      //                   border: OutlineInputBorder(      //                     borderRadius: BorderRadius.circular(8.0),      //                     borderSide: BorderSide.none,      //                   ),      //                   contentPadding: EdgeInsets.all(10.0),      //                   suffixIcon: Padding(      //                     padding: const EdgeInsets.all(8.0),      //                     child: Image.asset(      //                       'assets/images/person.png',      //                       height: 20.0,      //                       width: 20.0,      //                       alignment: Alignment.center,      //                     ),      //                   ),      //                 ),      //                 keyboardType: TextInputType.text,      //               ),      //             ),      //             Padding(      //               padding: const EdgeInsets.only(left: 16.0),      //               child: Text(      //                 'password'.tr(),      //                 style: TextStyle(      //                   fontFamily: 'Montserrat',      //                   color: Colors.black,      //                   fontWeight: FontWeight.w600,      //                   fontSize: 16.0,      //                 ),      //               ),      //             ),      //             Padding(      //               padding: const EdgeInsets.all(10.0),      //               child: Stack(      //                 alignment: Alignment.centerRight,      //                 children: [      //                   TextField(      //                     controller: _passwordController,      //                     // onChanged: (value) => startController.updatePassword(value), controller: _passwordController,      //                     decoration: InputDecoration(      //                       filled: true,      //                       fillColor: Utils.cardDefColor,      //                       border: OutlineInputBorder(      //                         borderRadius: BorderRadius.circular(8.0),      //                         borderSide: BorderSide.none,      //                       ),      //                       contentPadding: EdgeInsets.all(10.0),      //                     ),      //                     obscureText: _isObscure,      //                   ),      //                   InkWell(      //                     onTap: () {      //                       setState(() {      //                         _isObscure = !_isObscure;      //                       });      //                     },      //                     child: Padding(      //                       padding: const EdgeInsets.all(8.0),      //                       child: Image.asset(      //                         _isObscure ? 'assets/images/ic_eye.png' : 'assets/images/ic_eyeslash.png',      //                         height: 20,      //                         width: 20,      //                         color: Utils.colorPrimary,      //                         alignment: Alignment.center,      //                       ),      //                     ),      //                   ),      //                 ],      //               ),      //             ),      //             Row(      //               mainAxisAlignment: MainAxisAlignment.center,      //               children: [      //                 InkWell(      //                   onTap: () {      //                     hideKeyboard(context);      //                   },      //                   child: Row(      //                     children: [      //                       Image.asset("assets/images/qr_scan.png", height: 20, width: 20),      //                       SizedBox(width: 8.0),      //                       Text(      //                         'enter_with_qr_code'.tr(),      //                         style: TextStyle(      //                           fontFamily: 'Montserrat',      //                           fontWeight: FontWeight.w500,      //                           color: Colors.blue,      //                           fontSize: 14.0,      //                         ),      //                       ),      //                     ],      //                   ),      //                 ),      //               ],      //             ),      //             Card(      //               margin: EdgeInsets.symmetric(horizontal: 16.0, vertical: 16.0),      //               color: Colors.blue,      //               // Use the actual primary color      //               shape: RoundedRectangleBorder(      //                 borderRadius: BorderRadius.circular(20.0),      //               ),      //               elevation: 0.0,      //               child: InkWell(      //                 onTap: () {      //                   hideKeyboard(context);      //                   if (_startController.text.isNotEmpty && _passwordController.text.isNotEmpty) {      //                     _startBloc.add(StartTestEventData(username: _startController.text, password: _passwordController.text));      //                   } else {      //                     snack(context, "enter_start_password".tr());      //                   }      //                 },      //                 child: Padding(      //                   padding: const EdgeInsets.only(left: 32.0, right: 16.0, top: 16.0, bottom: 16.0),      //                   child: Row(      //                     mainAxisAlignment: MainAxisAlignment.spaceBetween,      //                     children: [      //                       Text(      //                         'enter'.tr(),      //                         style: TextStyle(      //                           fontFamily: 'Montserrat',      //                           fontWeight: FontWeight.w600,      //                           color: Colors.white,      //                           fontSize: 16.0,      //                         ),      //                       ),      //                       Transform.rotate(      //                         angle: 3.14,      //                         child: Icon(      //                           Icons.arrow_back,      //                           color: Colors.white,      //                         ),      //                       ),      //                     ],      //                   ),      //                 ),      //               ),      //             ),      //           ],      //         ),      //       );      //     })),    );  }}