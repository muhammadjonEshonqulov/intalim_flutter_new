import 'dart:convert';import 'package:floor/floor.dart';@entityclass LessonData {  @primaryKey  int? id;  String? lesson;  LessonData({required this.id, required this.lesson});  LessonData.fromJson(Map<String, dynamic> json) {    id = json['id'] ?? 0;    lesson = jsonEncode(Name.fromJson( json['lesson']["name"]).toJson());  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = <String, dynamic>{};    data['id'] = id;    data['lesson'] = lesson;    return data;  }}class Lesson {  int? id;  String? name;  String? shortname;  Lesson({this.id, this.name, this.shortname});  Lesson.fromJson(Map<String, dynamic> json) {    id = json['id'];    name = jsonEncode(Name.fromJson( json['lesson']["name"]).toJson());    shortname = json['short_name'];  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = <String, dynamic>{};    data['id'] = id;    data['name'] = name;    data['short_name'] = shortname;    return data;  }}class Name {  String? uz;  String? ru;  String? kiril;  Name({this.uz, this.ru, this.kiril});  Name.fromJson(Map<String, dynamic> json) {    uz = json['uz'].toString();    ru = json['ru'].toString();    kiril = json['kiril'].toString();  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = <String, dynamic>{};    data['uz'] = uz;    data['ru'] = ru;    data['kiril'] = kiril;    return data;  }}class LessonConverter extends TypeConverter<Lesson, String> {  @override  Lesson decode(String databaseValue) {    final jsonFile = json.decode(databaseValue);    return Lesson.fromJson(jsonFile);  }  @override  String encode(Lesson value) {    return json.encode(value.toJson());  }}class NameConverter extends TypeConverter<Name, String> {  @override  Name decode(String databaseValue) {    final jsonFile = json.decode(databaseValue);    return Name.fromJson(jsonFile);  }  @override  String encode(Name value) {    return json.encode(value.toJson());  }}