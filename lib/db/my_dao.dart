// dao/lesson_dao.dartimport 'package:floor/floor.dart';import 'package:intalim/features/lessons/model/lesson_data.dart';import '../features/content/model/content_data.dart';import '../features/savedLessons/model/saved_lesson_data.dart';import '../features/subjectTest/model/subject_test_data.dart';import '../features/topic/model/topic_data.dart';@daoabstract class MyDao {  // LessonData  @Query('SELECT * FROM LessonData')  Future<List<LessonData>> getAllLesson();  @Insert(onConflict: OnConflictStrategy.replace)  Future<void> insertLessonData(List<LessonData> lesson);  @Query("DELETE FROM LessonData")  Future<void> deleteLessons();  // SavedLessonData  @Query('SELECT * FROM SavedLessonData')  Future<List<SavedLessonData>> getAllSavedLesson();  @Insert(onConflict: OnConflictStrategy.replace)  Future<void> insertSavedLessonData(List<SavedLessonData> savedLesson);  @Query("DELETE FROM SavedLessonData")  Future<void> deleteSavedLessons();  // TopicData  @Query('SELECT * FROM TopicData where lessonId = :lessonId')  Future<List<TopicData>> getTopicData(int lessonId);  @Insert(onConflict: OnConflictStrategy.replace)  Future<void> insertTopicData(List<TopicData> topics);  @Query("DELETE FROM TopicData")  Future<void> deleteTopicData();  // ContentData  @Query('SELECT * FROM ContentData where topicId = :topicId')  Future<List<ContentData>> getContentData(int topicId);  @Insert(onConflict: OnConflictStrategy.replace)  Future<void> insertContentData(List<ContentData> contents);  @Query("DELETE FROM ContentData")  Future<void> deleteContentData();  // SubjectTestData  @Query('SELECT * FROM SubjectTestData')  Future<List<SubjectTestData>> getSubjectTestData();  @Insert(onConflict: OnConflictStrategy.replace)  Future<void> insertSubjectTestData(List<SubjectTestData> subjectTestData);  @Query("DELETE FROM SubjectTestData")  Future<void> deleteSubjectTestData();}