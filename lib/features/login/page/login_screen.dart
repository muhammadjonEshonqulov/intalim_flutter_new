import 'package:easy_localization/easy_localization.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:intalim/app/app.dart';import '../../../app/router.dart';import '../../../common/repository/network_result.dart';import '../../../common/services/utils/utils.dart';import '../block/login_bloc.dart';import '../repository/login_repository.dart';class LoginPageWithRepo extends StatelessWidget {  const LoginPageWithRepo({super.key});  @override  Widget build(BuildContext context) {    return BlocProvider(      create: (context) => LoginBloc(context.read<LoginRepository>()),      child: const LoginScreen(),    );  }}class LoginScreen extends StatefulWidget {  const LoginScreen({super.key});  @override  State<LoginScreen> createState() => _LoginScreenState();}class _LoginScreenState extends State<LoginScreen> {  final TextEditingController _loginController = TextEditingController();  TextEditingController _passwordController = TextEditingController();  // final GlobalKey<ScaffoldMessengerState> scaffoldMessengerKey = GlobalKey<ScaffoldMessengerState>();  bool _isObscure = true;  late LoginBloc _loginBloc;  @override  void initState() {    _loginBloc = BlocProvider.of<LoginBloc>(context);    // getLocation();    super.initState();  }  // late LocationPermission permission;  //  // void getLocation() async {  //   permission = await Geolocator.requestPermission();  // }  @override  Widget build(BuildContext context) {    return MaterialApp(      debugShowCheckedModeBanner: false,      home: Scaffold(          backgroundColor: Colors.white,          body: BlocConsumer<LoginBloc, NetworkResult>(listener: (context, state) {            if (state is Error) {              hideLoading();              snack(context, state.message.toString());            } else if (state is Success) {              hideLoading();              router.go(Routes.main);            } else if (state is Loading) {              showLoading(context);            } else {              hideLoading();              snack(context, state.message.toString());            }          }, builder: (context, state) {            return SingleChildScrollView(              child: Column(                crossAxisAlignment: CrossAxisAlignment.stretch,                children: [                  Padding(                    padding: const EdgeInsets.fromLTRB(16.0, 50.0, 16.0, 0),                    child: Row(                      mainAxisAlignment: MainAxisAlignment.spaceBetween,                      children: [                        Column(                          crossAxisAlignment: CrossAxisAlignment.start,                          children: [                            Text(                              "make_registration".tr(),                              style: const TextStyle(                                fontFamily: 'Montserrat',                                fontWeight: FontWeight.w600,                                color: Colors.black,                                fontSize: 16.0,                              ),                            ),                            Image.asset(                              'assets/images/register_icon.png',                              width: 120.0,                              height: 20.0,                            ),                          ],                        ),                        Card(                          color: Utils.cardDefColor,                          shape: RoundedRectangleBorder(                            borderRadius: BorderRadius.circular(8.0),                          ),                          elevation: 0,                          child: Padding(                            padding: const EdgeInsets.all(8.0),                            child: Row(                              children: [                                Image.asset(                                  'assets/images/ic_uz.png',                                  width: 30.0,                                  height: 20.0,                                ),                                Text(                                  'uzbek_language'.tr(),                                  style: TextStyle(                                    fontFamily: 'Montserrat',                                    fontWeight: FontWeight.w500,                                    color: Colors.black,                                    fontSize: 14.0,                                  ),                                ),                              ],                            ),                          ),                        ),                      ],                    ),                  ),                  Image.asset(                    'assets/images/login_icon.png',                    height: 260.0,                    width: 260.0,                    alignment: Alignment.center,                  ),                  SizedBox(                    height: 50,                  ),                  Text(                    "login_txt".tr(),                    style: TextStyle(                      fontFamily: 'Montserrat',                      color: Colors.black,                      fontWeight: FontWeight.w500,                      fontSize: 20.0,                    ),                    textAlign: TextAlign.center,                  ),                  SizedBox(                    height: 20,                  ),                  Padding(                    padding: const EdgeInsets.only(left: 16.0),                    child: Text(                      'user_name'.tr(),                      style: TextStyle(                        fontFamily: 'Montserrat',                        color: Colors.black,                        fontWeight: FontWeight.w600,                        fontSize: 16.0,                      ),                    ),                  ),                  Padding(                    padding: const EdgeInsets.all(10.0),                    child: TextField(                      controller: _loginController,                      // onChanged: (value) => loginController.updateUsername(value), controller: _loginController,                      decoration: InputDecoration(                        filled: true,                        fillColor: Utils.cardDefColor,                        border: OutlineInputBorder(                          borderRadius: BorderRadius.circular(8.0),                          borderSide: BorderSide.none,                        ),                        contentPadding: EdgeInsets.all(10.0),                        suffixIcon: Padding(                          padding: const EdgeInsets.all(8.0),                          child: Image.asset(                            'assets/images/person.png',                            height: 20.0,                            width: 20.0,                            alignment: Alignment.center,                          ),                        ),                      ),                      keyboardType: TextInputType.text,                    ),                  ),                  Padding(                    padding: const EdgeInsets.only(left: 16.0),                    child: Text(                      'password'.tr(),                      style: TextStyle(                        fontFamily: 'Montserrat',                        color: Colors.black,                        fontWeight: FontWeight.w600,                        fontSize: 16.0,                      ),                    ),                  ),                  Padding(                    padding: const EdgeInsets.all(10.0),                    child: Stack(                      alignment: Alignment.centerRight,                      children: [                        TextField(                          controller: _passwordController,                          // onChanged: (value) => loginController.updatePassword(value), controller: _passwordController,                          decoration: InputDecoration(                            filled: true,                            fillColor: Utils.cardDefColor,                            border: OutlineInputBorder(                              borderRadius: BorderRadius.circular(8.0),                              borderSide: BorderSide.none,                            ),                            contentPadding: EdgeInsets.all(10.0),                          ),                          obscureText: _isObscure,                        ),                        InkWell(                          onTap: () {                            setState(() {                              _isObscure = !_isObscure;                            });                          },                          child: Padding(                            padding: const EdgeInsets.all(8.0),                            child: Image.asset(                              _isObscure ? 'assets/images/ic_eye.png' : 'assets/images/ic_eyeslash.png',                              height: 20,                              width: 20,                              color: Utils.colorPrimary,                              alignment: Alignment.center,                            ),                          ),                        ),                      ],                    ),                  ),                  Row(                    mainAxisAlignment: MainAxisAlignment.center,                    children: [                      InkWell(                        onTap: () {                          hideKeyboard(context);                        },                        child: Row(                          children: [                            Image.asset("assets/images/qr_scan.png", height: 20, width: 20),                            SizedBox(width: 8.0),                            Text(                              'enter_with_qr_code'.tr(),                              style: TextStyle(                                fontFamily: 'Montserrat',                                fontWeight: FontWeight.w500,                                color: Colors.blue,                                fontSize: 14.0,                              ),                            ),                          ],                        ),                      ),                    ],                  ),                  Card(                    margin: EdgeInsets.symmetric(horizontal: 16.0, vertical: 16.0),                    color: Colors.blue,                    // Use the actual primary color                    shape: RoundedRectangleBorder(                      borderRadius: BorderRadius.circular(20.0),                    ),                    elevation: 0.0,                    child: InkWell(                      onTap: () {                        hideKeyboard(context);                        if (_loginController.text.isNotEmpty && _passwordController.text.isNotEmpty) {                          _loginBloc.add(LoginEventData(username: _loginController.text, password: _passwordController.text));                        } else {                          snack(context, "enter_login_password".tr());                        }                      },                      child: Padding(                        padding: const EdgeInsets.only(left: 32.0, right: 16.0, top: 16.0, bottom: 16.0),                        child: Row(                          mainAxisAlignment: MainAxisAlignment.spaceBetween,                          children: [                            Text(                              'enter'.tr(),                              style: TextStyle(                                fontFamily: 'Montserrat',                                fontWeight: FontWeight.w600,                                color: Colors.white,                                fontSize: 16.0,                              ),                            ),                            Transform.rotate(                              angle: 3.14,                              child: Icon(                                Icons.arrow_back,                                color: Colors.white,                              ),                            ),                          ],                        ),                      ),                    ),                  ),                ],              ),            );          })),    );  }}